     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: testdata/pet.spec.go:3:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: testdata/pet.spec.go:3:9
     5  .  .  Name: "api"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 6) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: testdata/pet.spec.go:5:1
    12  .  .  .  Tok: const
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.ValueSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    18  .  .  .  .  .  .  0: *ast.Ident {
    19  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:5:7
    20  .  .  .  .  .  .  .  Name: "OpenAPISpec"
    21  .  .  .  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  .  .  .  Kind: const
    23  .  .  .  .  .  .  .  .  Name: "OpenAPISpec"
    24  .  .  .  .  .  .  .  .  Decl: *(obj @ 15)
    25  .  .  .  .  .  .  .  .  Data: 0
    26  .  .  .  .  .  .  .  .  Type: nil
    27  .  .  .  .  .  .  .  }
    28  .  .  .  .  .  .  }
    29  .  .  .  .  .  }
    30  .  .  .  .  .  Type: nil
    31  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    32  .  .  .  .  .  .  0: *ast.BasicLit {
    33  .  .  .  .  .  .  .  ValuePos: testdata/pet.spec.go:5:21
    34  .  .  .  .  .  .  .  Kind: STRING
    35  .  .  .  .  .  .  .  Value: "`\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n`"
    36  .  .  .  .  .  .  }
    37  .  .  .  .  .  }
    38  .  .  .  .  .  Comment: nil
    39  .  .  .  .  }
    40  .  .  .  }
    41  .  .  .  Rparen: -
    42  .  .  }
    43  .  .  1: *ast.GenDecl {
    44  .  .  .  Doc: nil
    45  .  .  .  TokPos: testdata/pet.spec.go:20:1
    46  .  .  .  Tok: type
    47  .  .  .  Lparen: -
    48  .  .  .  Specs: []ast.Spec (len = 1) {
    49  .  .  .  .  0: *ast.TypeSpec {
    50  .  .  .  .  .  Doc: nil
    51  .  .  .  .  .  Name: *ast.Ident {
    52  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:20:6
    53  .  .  .  .  .  .  Name: "Error"
    54  .  .  .  .  .  .  Obj: *ast.Object {
    55  .  .  .  .  .  .  .  Kind: type
    56  .  .  .  .  .  .  .  Name: "Error"
    57  .  .  .  .  .  .  .  Decl: *(obj @ 49)
    58  .  .  .  .  .  .  .  Data: nil
    59  .  .  .  .  .  .  .  Type: nil
    60  .  .  .  .  .  .  }
    61  .  .  .  .  .  }
    62  .  .  .  .  .  Assign: -
    63  .  .  .  .  .  Type: *ast.StructType {
    64  .  .  .  .  .  .  Struct: testdata/pet.spec.go:20:12
    65  .  .  .  .  .  .  Fields: *ast.FieldList {
    66  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:20:19
    67  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    68  .  .  .  .  .  .  .  .  0: *ast.Field {
    69  .  .  .  .  .  .  .  .  .  Doc: nil
    70  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    71  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    72  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:21:2
    73  .  .  .  .  .  .  .  .  .  .  .  Name: "Code"
    74  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    75  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    76  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Code"
    77  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 68)
    78  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
    79  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    80  .  .  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    84  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:21:10
    85  .  .  .  .  .  .  .  .  .  .  Name: "int32"
    86  .  .  .  .  .  .  .  .  .  .  Obj: nil
    87  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  .  Tag: nil
    89  .  .  .  .  .  .  .  .  .  Comment: nil
    90  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  .  1: *ast.Field {
    92  .  .  .  .  .  .  .  .  .  Doc: nil
    93  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    94  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    95  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:22:2
    96  .  .  .  .  .  .  .  .  .  .  .  Name: "Message"
    97  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    98  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    99  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Message"
   100  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 91)
   101  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   102  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   103  .  .  .  .  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   107  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:22:10
   108  .  .  .  .  .  .  .  .  .  .  Name: "string"
   109  .  .  .  .  .  .  .  .  .  .  Obj: nil
   110  .  .  .  .  .  .  .  .  .  }
   111  .  .  .  .  .  .  .  .  .  Tag: nil
   112  .  .  .  .  .  .  .  .  .  Comment: nil
   113  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  }
   115  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:23:1
   116  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  Incomplete: false
   118  .  .  .  .  .  }
   119  .  .  .  .  .  Comment: nil
   120  .  .  .  .  }
   121  .  .  .  }
   122  .  .  .  Rparen: -
   123  .  .  }
   124  .  .  2: *ast.GenDecl {
   125  .  .  .  Doc: nil
   126  .  .  .  TokPos: testdata/pet.spec.go:25:1
   127  .  .  .  Tok: type
   128  .  .  .  Lparen: -
   129  .  .  .  Specs: []ast.Spec (len = 1) {
   130  .  .  .  .  0: *ast.TypeSpec {
   131  .  .  .  .  .  Doc: nil
   132  .  .  .  .  .  Name: *ast.Ident {
   133  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:25:6
   134  .  .  .  .  .  .  Name: "NewPet"
   135  .  .  .  .  .  .  Obj: *ast.Object {
   136  .  .  .  .  .  .  .  Kind: type
   137  .  .  .  .  .  .  .  Name: "NewPet"
   138  .  .  .  .  .  .  .  Decl: *(obj @ 130)
   139  .  .  .  .  .  .  .  Data: nil
   140  .  .  .  .  .  .  .  Type: nil
   141  .  .  .  .  .  .  }
   142  .  .  .  .  .  }
   143  .  .  .  .  .  Assign: -
   144  .  .  .  .  .  Type: *ast.StructType {
   145  .  .  .  .  .  .  Struct: testdata/pet.spec.go:25:13
   146  .  .  .  .  .  .  Fields: *ast.FieldList {
   147  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:25:20
   148  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   149  .  .  .  .  .  .  .  .  0: *ast.Field {
   150  .  .  .  .  .  .  .  .  .  Doc: nil
   151  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   152  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   153  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:26:2
   154  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   155  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   156  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   157  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   158  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 149)
   159  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   160  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   161  .  .  .  .  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   165  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:26:7
   166  .  .  .  .  .  .  .  .  .  .  Name: "string"
   167  .  .  .  .  .  .  .  .  .  .  Obj: nil
   168  .  .  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   170  .  .  .  .  .  .  .  .  .  .  ValuePos: testdata/pet.spec.go:26:14
   171  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   172  .  .  .  .  .  .  .  .  .  .  Value: "`{min:10,max:10}`"
   173  .  .  .  .  .  .  .  .  .  }
   174  .  .  .  .  .  .  .  .  .  Comment: nil
   175  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  1: *ast.Field {
   177  .  .  .  .  .  .  .  .  .  Doc: nil
   178  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   179  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   180  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:2
   181  .  .  .  .  .  .  .  .  .  .  .  Name: "Tag"
   182  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   183  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   184  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Tag"
   185  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 176)
   186  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   187  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   188  .  .  .  .  .  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   192  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:7
   193  .  .  .  .  .  .  .  .  .  .  Name: "string"
   194  .  .  .  .  .  .  .  .  .  .  Obj: nil
   195  .  .  .  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   197  .  .  .  .  .  .  .  .  .  .  ValuePos: testdata/pet.spec.go:27:14
   198  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   199  .  .  .  .  .  .  .  .  .  .  Value: "`{min:10,max:20,format:\"[a-z][A-Z]\"}`"
   200  .  .  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  .  .  Comment: nil
   202  .  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  }
   204  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:28:1
   205  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  Incomplete: false
   207  .  .  .  .  .  }
   208  .  .  .  .  .  Comment: nil
   209  .  .  .  .  }
   210  .  .  .  }
   211  .  .  .  Rparen: -
   212  .  .  }
   213  .  .  3: *ast.GenDecl {
   214  .  .  .  Doc: nil
   215  .  .  .  TokPos: testdata/pet.spec.go:30:1
   216  .  .  .  Tok: type
   217  .  .  .  Lparen: -
   218  .  .  .  Specs: []ast.Spec (len = 1) {
   219  .  .  .  .  0: *ast.TypeSpec {
   220  .  .  .  .  .  Doc: nil
   221  .  .  .  .  .  Name: *ast.Ident {
   222  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:30:6
   223  .  .  .  .  .  .  Name: "Pet"
   224  .  .  .  .  .  .  Obj: *ast.Object {
   225  .  .  .  .  .  .  .  Kind: type
   226  .  .  .  .  .  .  .  Name: "Pet"
   227  .  .  .  .  .  .  .  Decl: *(obj @ 219)
   228  .  .  .  .  .  .  .  Data: nil
   229  .  .  .  .  .  .  .  Type: nil
   230  .  .  .  .  .  .  }
   231  .  .  .  .  .  }
   232  .  .  .  .  .  Assign: -
   233  .  .  .  .  .  Type: *ast.StructType {
   234  .  .  .  .  .  .  Struct: testdata/pet.spec.go:30:10
   235  .  .  .  .  .  .  Fields: *ast.FieldList {
   236  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:30:17
   237  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   238  .  .  .  .  .  .  .  .  0: *ast.Field {
   239  .  .  .  .  .  .  .  .  .  Doc: nil
   240  .  .  .  .  .  .  .  .  .  Names: nil
   241  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   242  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:31:2
   243  .  .  .  .  .  .  .  .  .  .  Name: "NewPet"
   244  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 135)
   245  .  .  .  .  .  .  .  .  .  }
   246  .  .  .  .  .  .  .  .  .  Tag: nil
   247  .  .  .  .  .  .  .  .  .  Comment: nil
   248  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  .  1: *ast.Field {
   250  .  .  .  .  .  .  .  .  .  Doc: nil
   251  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   252  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   253  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:32:2
   254  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   255  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   256  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   257  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   258  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 249)
   259  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   260  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   261  .  .  .  .  .  .  .  .  .  .  .  }
   262  .  .  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  .  }
   264  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   265  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:32:5
   266  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   267  .  .  .  .  .  .  .  .  .  .  Obj: nil
   268  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  Tag: nil
   270  .  .  .  .  .  .  .  .  .  Comment: nil
   271  .  .  .  .  .  .  .  .  }
   272  .  .  .  .  .  .  .  }
   273  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:33:1
   274  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  Incomplete: false
   276  .  .  .  .  .  }
   277  .  .  .  .  .  Comment: nil
   278  .  .  .  .  }
   279  .  .  .  }
   280  .  .  .  Rparen: -
   281  .  .  }
   282  .  .  4: *ast.GenDecl {
   283  .  .  .  Doc: nil
   284  .  .  .  TokPos: testdata/pet.spec.go:35:1
   285  .  .  .  Tok: type
   286  .  .  .  Lparen: -
   287  .  .  .  Specs: []ast.Spec (len = 1) {
   288  .  .  .  .  0: *ast.TypeSpec {
   289  .  .  .  .  .  Doc: nil
   290  .  .  .  .  .  Name: *ast.Ident {
   291  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:35:6
   292  .  .  .  .  .  .  Name: "FindPetsParams"
   293  .  .  .  .  .  .  Obj: *ast.Object {
   294  .  .  .  .  .  .  .  Kind: type
   295  .  .  .  .  .  .  .  Name: "FindPetsParams"
   296  .  .  .  .  .  .  .  Decl: *(obj @ 288)
   297  .  .  .  .  .  .  .  Data: nil
   298  .  .  .  .  .  .  .  Type: nil
   299  .  .  .  .  .  .  }
   300  .  .  .  .  .  }
   301  .  .  .  .  .  Assign: -
   302  .  .  .  .  .  Type: *ast.StructType {
   303  .  .  .  .  .  .  Struct: testdata/pet.spec.go:35:21
   304  .  .  .  .  .  .  Fields: *ast.FieldList {
   305  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:35:28
   306  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   307  .  .  .  .  .  .  .  .  0: *ast.Field {
   308  .  .  .  .  .  .  .  .  .  Doc: nil
   309  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   310  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   311  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:2
   312  .  .  .  .  .  .  .  .  .  .  .  Name: "Tags"
   313  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   314  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   315  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Tags"
   316  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 307)
   317  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   318  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   319  .  .  .  .  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   323  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:36:8
   324  .  .  .  .  .  .  .  .  .  .  Len: nil
   325  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   326  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:10
   327  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   328  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   329  .  .  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  .  .  Tag: nil
   332  .  .  .  .  .  .  .  .  .  Comment: nil
   333  .  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  .  1: *ast.Field {
   335  .  .  .  .  .  .  .  .  .  Doc: nil
   336  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   337  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   338  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:37:2
   339  .  .  .  .  .  .  .  .  .  .  .  Name: "Limit"
   340  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   341  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   342  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Limit"
   343  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 334)
   344  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   345  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   346  .  .  .  .  .  .  .  .  .  .  .  }
   347  .  .  .  .  .  .  .  .  .  .  }
   348  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   350  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:37:8
   351  .  .  .  .  .  .  .  .  .  .  Name: "int32"
   352  .  .  .  .  .  .  .  .  .  .  Obj: nil
   353  .  .  .  .  .  .  .  .  .  }
   354  .  .  .  .  .  .  .  .  .  Tag: nil
   355  .  .  .  .  .  .  .  .  .  Comment: nil
   356  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  }
   358  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:38:1
   359  .  .  .  .  .  .  }
   360  .  .  .  .  .  .  Incomplete: false
   361  .  .  .  .  .  }
   362  .  .  .  .  .  Comment: nil
   363  .  .  .  .  }
   364  .  .  .  }
   365  .  .  .  Rparen: -
   366  .  .  }
   367  .  .  5: *ast.GenDecl {
   368  .  .  .  Doc: nil
   369  .  .  .  TokPos: testdata/pet.spec.go:40:1
   370  .  .  .  Tok: type
   371  .  .  .  Lparen: -
   372  .  .  .  Specs: []ast.Spec (len = 1) {
   373  .  .  .  .  0: *ast.TypeSpec {
   374  .  .  .  .  .  Doc: nil
   375  .  .  .  .  .  Name: *ast.Ident {
   376  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:40:6
   377  .  .  .  .  .  .  Name: "Interface"
   378  .  .  .  .  .  .  Obj: *ast.Object {
   379  .  .  .  .  .  .  .  Kind: type
   380  .  .  .  .  .  .  .  Name: "Interface"
   381  .  .  .  .  .  .  .  Decl: *(obj @ 373)
   382  .  .  .  .  .  .  .  Data: nil
   383  .  .  .  .  .  .  .  Type: nil
   384  .  .  .  .  .  .  }
   385  .  .  .  .  .  }
   386  .  .  .  .  .  Assign: -
   387  .  .  .  .  .  Type: *ast.InterfaceType {
   388  .  .  .  .  .  .  Interface: testdata/pet.spec.go:40:16
   389  .  .  .  .  .  .  Methods: *ast.FieldList {
   390  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:40:26
   391  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {
   392  .  .  .  .  .  .  .  .  0: *ast.Field {
   393  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   394  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 7) {
   395  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   396  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:41:2
   397  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// Returns all pets from the system that the user has access to"
   398  .  .  .  .  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Comment {
   400  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:42:2
   401  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia."
   402  .  .  .  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Comment {
   404  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:43:2
   405  .  .  .  .  .  .  .  .  .  .  .  .  Text: "//"
   406  .  .  .  .  .  .  .  .  .  .  .  }
   407  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Comment {
   408  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:44:2
   409  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien."
   410  .  .  .  .  .  .  .  .  .  .  .  }
   411  .  .  .  .  .  .  .  .  .  .  .  4: *ast.Comment {
   412  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:45:2
   413  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 200: pet response"
   414  .  .  .  .  .  .  .  .  .  .  .  }
   415  .  .  .  .  .  .  .  .  .  .  .  5: *ast.Comment {
   416  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:46:2
   417  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// default: unexpected error"
   418  .  .  .  .  .  .  .  .  .  .  .  }
   419  .  .  .  .  .  .  .  .  .  .  .  6: *ast.Comment {
   420  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:47:2
   421  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (GET /pets)"
   422  .  .  .  .  .  .  .  .  .  .  .  }
   423  .  .  .  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   426  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   427  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:48:2
   428  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPets"
   429  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   430  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   431  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPets"
   432  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 392)
   433  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   434  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   435  .  .  .  .  .  .  .  .  .  .  .  }
   436  .  .  .  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   439  .  .  .  .  .  .  .  .  .  .  Func: -
   440  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   441  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:48:10
   442  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   443  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   444  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   445  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:48:11
   448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "params"
   449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "params"
   452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 443)
   453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:48:18
   460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetsParams"
   461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 293)
   462  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   464  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   465  .  .  .  .  .  .  .  .  .  .  .  .  }
   466  .  .  .  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:48:32
   468  .  .  .  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   470  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   471  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   472  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   473  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   474  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   475  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:48:34
   477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Len: nil
   478  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   479  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:48:36
   480  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 224)
   482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   483  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   485  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   486  .  .  .  .  .  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  .  .  .  .  }
   488  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   489  .  .  .  .  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  .  .  .  }
   491  .  .  .  .  .  .  .  .  .  Tag: nil
   492  .  .  .  .  .  .  .  .  .  Comment: nil
   493  .  .  .  .  .  .  .  .  }
   494  .  .  .  .  .  .  .  .  1: *ast.Field {
   495  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   496  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   497  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   498  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:50:2
   499  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (POST /pets)"
   500  .  .  .  .  .  .  .  .  .  .  .  }
   501  .  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   504  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   505  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:51:2
   506  .  .  .  .  .  .  .  .  .  .  .  Name: "AddPet"
   507  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   508  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   509  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AddPet"
   510  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 494)
   511  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   512  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   513  .  .  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  .  .  .  }
   516  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   517  .  .  .  .  .  .  .  .  .  .  Func: -
   518  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   519  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:51:8
   520  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   521  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   522  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   523  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:51:9
   526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "body"
   527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "body"
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 521)
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:51:14
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 224)
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   543  .  .  .  .  .  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  .  .  .  .  .  }
   545  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:51:17
   546  .  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   548  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   549  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   550  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   551  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   552  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   553  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:51:19
   555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 224)
   557  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   559  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   560  .  .  .  .  .  .  .  .  .  .  .  .  }
   561  .  .  .  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   563  .  .  .  .  .  .  .  .  .  .  }
   564  .  .  .  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  .  .  .  Tag: nil
   566  .  .  .  .  .  .  .  .  .  Comment: nil
   567  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  2: *ast.Field {
   569  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   570  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   571  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   572  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:53:2
   573  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (DELETE /pets/{id})"
   574  .  .  .  .  .  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  .  .  .  .  }
   576  .  .  .  .  .  .  .  .  .  }
   577  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   578  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   579  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:54:2
   580  .  .  .  .  .  .  .  .  .  .  .  Name: "DeletePet"
   581  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   582  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   583  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DeletePet"
   584  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 568)
   585  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   586  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   587  .  .  .  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  .  .  .  }
   590  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   591  .  .  .  .  .  .  .  .  .  .  Func: -
   592  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   593  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:54:11
   594  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   595  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   596  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   597  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:54:12
   600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 595)
   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   609  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:54:15
   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   614  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   616  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   617  .  .  .  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  .  .  .  }
   619  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:54:20
   620  .  .  .  .  .  .  .  .  .  .  }
   621  .  .  .  .  .  .  .  .  .  .  Results: nil
   622  .  .  .  .  .  .  .  .  .  }
   623  .  .  .  .  .  .  .  .  .  Tag: nil
   624  .  .  .  .  .  .  .  .  .  Comment: nil
   625  .  .  .  .  .  .  .  .  }
   626  .  .  .  .  .  .  .  .  3: *ast.Field {
   627  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   628  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   629  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   630  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:56:2
   631  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (GET /pets/{id})"
   632  .  .  .  .  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  .  .  .  .  }
   634  .  .  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   636  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   637  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:57:2
   638  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetById"
   639  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   640  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   641  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetById"
   642  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 626)
   643  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   644  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   645  .  .  .  .  .  .  .  .  .  .  .  }
   646  .  .  .  .  .  .  .  .  .  .  }
   647  .  .  .  .  .  .  .  .  .  }
   648  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   649  .  .  .  .  .  .  .  .  .  .  Func: -
   650  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   651  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:57:13
   652  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   653  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   654  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   655  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:57:14
   658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 653)
   663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   667  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   668  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:57:17
   670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   672  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   673  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   674  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   675  .  .  .  .  .  .  .  .  .  .  .  .  }
   676  .  .  .  .  .  .  .  .  .  .  .  }
   677  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:57:22
   678  .  .  .  .  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   680  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   681  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   682  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   683  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   684  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   685  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:57:24
   687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Len: nil
   688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:57:26
   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 224)
   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   693  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   694  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   695  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   696  .  .  .  .  .  .  .  .  .  .  .  .  }
   697  .  .  .  .  .  .  .  .  .  .  .  }
   698  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   699  .  .  .  .  .  .  .  .  .  .  }
   700  .  .  .  .  .  .  .  .  .  }
   701  .  .  .  .  .  .  .  .  .  Tag: nil
   702  .  .  .  .  .  .  .  .  .  Comment: nil
   703  .  .  .  .  .  .  .  .  }
   704  .  .  .  .  .  .  .  }
   705  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:58:1
   706  .  .  .  .  .  .  }
   707  .  .  .  .  .  .  Incomplete: false
   708  .  .  .  .  .  }
   709  .  .  .  .  .  Comment: nil
   710  .  .  .  .  }
   711  .  .  .  }
   712  .  .  .  Rparen: -
   713  .  .  }
   714  .  }
   715  .  Scope: *ast.Scope {
   716  .  .  Outer: nil
   717  .  .  Objects: map[string]*ast.Object (len = 6) {
   718  .  .  .  "OpenAPISpec": *(obj @ 21)
   719  .  .  .  "Error": *(obj @ 54)
   720  .  .  .  "NewPet": *(obj @ 135)
   721  .  .  .  "Pet": *(obj @ 224)
   722  .  .  .  "FindPetsParams": *(obj @ 293)
   723  .  .  .  "Interface": *(obj @ 378)
   724  .  .  }
   725  .  }
   726  .  Imports: nil
   727  .  Unresolved: []*ast.Ident (len = 9) {
   728  .  .  0: *(obj @ 83)
   729  .  .  1: *(obj @ 106)
   730  .  .  2: *(obj @ 164)
   731  .  .  3: *(obj @ 191)
   732  .  .  4: *(obj @ 264)
   733  .  .  5: *(obj @ 325)
   734  .  .  6: *(obj @ 349)
   735  .  .  7: *(obj @ 610)
   736  .  .  8: *(obj @ 668)
   737  .  }
   738  .  Comments: []*ast.CommentGroup (len = 5) {
   739  .  .  0: *ast.CommentGroup {
   740  .  .  .  List: []*ast.Comment (len = 1) {
   741  .  .  .  .  0: *ast.Comment {
   742  .  .  .  .  .  Slash: testdata/pet.spec.go:1:1
   743  .  .  .  .  .  Text: "// +build ignore"
   744  .  .  .  .  }
   745  .  .  .  }
   746  .  .  }
   747  .  .  1: *(obj @ 393)
   748  .  .  2: *(obj @ 495)
   749  .  .  3: *(obj @ 569)
   750  .  .  4: *(obj @ 627)
   751  .  }
   752  }
