     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: testdata/pet.spec.go:3:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: testdata/pet.spec.go:3:9
     5  .  .  Name: "api"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 5) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: testdata/pet.spec.go:5:1
    12  .  .  .  Tok: type
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.TypeSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: *ast.Ident {
    18  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:5:6
    19  .  .  .  .  .  .  Name: "Error"
    20  .  .  .  .  .  .  Obj: *ast.Object {
    21  .  .  .  .  .  .  .  Kind: type
    22  .  .  .  .  .  .  .  Name: "Error"
    23  .  .  .  .  .  .  .  Decl: *(obj @ 15)
    24  .  .  .  .  .  .  .  Data: nil
    25  .  .  .  .  .  .  .  Type: nil
    26  .  .  .  .  .  .  }
    27  .  .  .  .  .  }
    28  .  .  .  .  .  Assign: -
    29  .  .  .  .  .  Type: *ast.StructType {
    30  .  .  .  .  .  .  Struct: testdata/pet.spec.go:5:12
    31  .  .  .  .  .  .  Fields: *ast.FieldList {
    32  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:5:19
    33  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    34  .  .  .  .  .  .  .  .  0: *ast.Field {
    35  .  .  .  .  .  .  .  .  .  Doc: nil
    36  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    37  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    38  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:6:2
    39  .  .  .  .  .  .  .  .  .  .  .  Name: "Code"
    40  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    41  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    42  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Code"
    43  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 34)
    44  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
    45  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    46  .  .  .  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    50  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:6:10
    51  .  .  .  .  .  .  .  .  .  .  Name: "int32"
    52  .  .  .  .  .  .  .  .  .  .  Obj: nil
    53  .  .  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  .  .  .  Tag: nil
    55  .  .  .  .  .  .  .  .  .  Comment: nil
    56  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  1: *ast.Field {
    58  .  .  .  .  .  .  .  .  .  Doc: nil
    59  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    60  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    61  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:7:2
    62  .  .  .  .  .  .  .  .  .  .  .  Name: "Message"
    63  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    64  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    65  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Message"
    66  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 57)
    67  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
    68  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    69  .  .  .  .  .  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    73  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:7:10
    74  .  .  .  .  .  .  .  .  .  .  Name: "string"
    75  .  .  .  .  .  .  .  .  .  .  Obj: nil
    76  .  .  .  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  .  .  .  Tag: nil
    78  .  .  .  .  .  .  .  .  .  Comment: nil
    79  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:8:1
    82  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  Incomplete: false
    84  .  .  .  .  .  }
    85  .  .  .  .  .  Comment: nil
    86  .  .  .  .  }
    87  .  .  .  }
    88  .  .  .  Rparen: -
    89  .  .  }
    90  .  .  1: *ast.GenDecl {
    91  .  .  .  Doc: nil
    92  .  .  .  TokPos: testdata/pet.spec.go:10:1
    93  .  .  .  Tok: type
    94  .  .  .  Lparen: -
    95  .  .  .  Specs: []ast.Spec (len = 1) {
    96  .  .  .  .  0: *ast.TypeSpec {
    97  .  .  .  .  .  Doc: nil
    98  .  .  .  .  .  Name: *ast.Ident {
    99  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:10:6
   100  .  .  .  .  .  .  Name: "NewPet"
   101  .  .  .  .  .  .  Obj: *ast.Object {
   102  .  .  .  .  .  .  .  Kind: type
   103  .  .  .  .  .  .  .  Name: "NewPet"
   104  .  .  .  .  .  .  .  Decl: *(obj @ 96)
   105  .  .  .  .  .  .  .  Data: nil
   106  .  .  .  .  .  .  .  Type: nil
   107  .  .  .  .  .  .  }
   108  .  .  .  .  .  }
   109  .  .  .  .  .  Assign: -
   110  .  .  .  .  .  Type: *ast.StructType {
   111  .  .  .  .  .  .  Struct: testdata/pet.spec.go:10:13
   112  .  .  .  .  .  .  Fields: *ast.FieldList {
   113  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:10:20
   114  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   115  .  .  .  .  .  .  .  .  0: *ast.Field {
   116  .  .  .  .  .  .  .  .  .  Doc: nil
   117  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   118  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   119  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:11:2
   120  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   121  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   122  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   123  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Name"
   124  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 115)
   125  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   126  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   127  .  .  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  .  }
   129  .  .  .  .  .  .  .  .  .  }
   130  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   131  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:11:7
   132  .  .  .  .  .  .  .  .  .  .  Name: "string"
   133  .  .  .  .  .  .  .  .  .  .  Obj: nil
   134  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  Tag: nil
   136  .  .  .  .  .  .  .  .  .  Comment: nil
   137  .  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  .  1: *ast.Field {
   139  .  .  .  .  .  .  .  .  .  Doc: nil
   140  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   141  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   142  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:12:2
   143  .  .  .  .  .  .  .  .  .  .  .  Name: "Tag"
   144  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   145  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   146  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Tag"
   147  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 138)
   148  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   149  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   150  .  .  .  .  .  .  .  .  .  .  .  }
   151  .  .  .  .  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   154  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:12:7
   155  .  .  .  .  .  .  .  .  .  .  Name: "string"
   156  .  .  .  .  .  .  .  .  .  .  Obj: nil
   157  .  .  .  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  .  .  .  Tag: nil
   159  .  .  .  .  .  .  .  .  .  Comment: nil
   160  .  .  .  .  .  .  .  .  }
   161  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:13:1
   163  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  Incomplete: false
   165  .  .  .  .  .  }
   166  .  .  .  .  .  Comment: nil
   167  .  .  .  .  }
   168  .  .  .  }
   169  .  .  .  Rparen: -
   170  .  .  }
   171  .  .  2: *ast.GenDecl {
   172  .  .  .  Doc: nil
   173  .  .  .  TokPos: testdata/pet.spec.go:15:1
   174  .  .  .  Tok: type
   175  .  .  .  Lparen: -
   176  .  .  .  Specs: []ast.Spec (len = 1) {
   177  .  .  .  .  0: *ast.TypeSpec {
   178  .  .  .  .  .  Doc: nil
   179  .  .  .  .  .  Name: *ast.Ident {
   180  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:15:6
   181  .  .  .  .  .  .  Name: "Pet"
   182  .  .  .  .  .  .  Obj: *ast.Object {
   183  .  .  .  .  .  .  .  Kind: type
   184  .  .  .  .  .  .  .  Name: "Pet"
   185  .  .  .  .  .  .  .  Decl: *(obj @ 177)
   186  .  .  .  .  .  .  .  Data: nil
   187  .  .  .  .  .  .  .  Type: nil
   188  .  .  .  .  .  .  }
   189  .  .  .  .  .  }
   190  .  .  .  .  .  Assign: -
   191  .  .  .  .  .  Type: *ast.StructType {
   192  .  .  .  .  .  .  Struct: testdata/pet.spec.go:15:10
   193  .  .  .  .  .  .  Fields: *ast.FieldList {
   194  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:15:17
   195  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   196  .  .  .  .  .  .  .  .  0: *ast.Field {
   197  .  .  .  .  .  .  .  .  .  Doc: nil
   198  .  .  .  .  .  .  .  .  .  Names: nil
   199  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   200  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:16:2
   201  .  .  .  .  .  .  .  .  .  .  Name: "NewPet"
   202  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
   203  .  .  .  .  .  .  .  .  .  }
   204  .  .  .  .  .  .  .  .  .  Tag: nil
   205  .  .  .  .  .  .  .  .  .  Comment: nil
   206  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  1: *ast.Field {
   208  .  .  .  .  .  .  .  .  .  Doc: nil
   209  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   210  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   211  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:17:2
   212  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   213  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   214  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   215  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   216  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 207)
   217  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   218  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   219  .  .  .  .  .  .  .  .  .  .  .  }
   220  .  .  .  .  .  .  .  .  .  .  }
   221  .  .  .  .  .  .  .  .  .  }
   222  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   223  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:17:5
   224  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   225  .  .  .  .  .  .  .  .  .  .  Obj: nil
   226  .  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  .  .  Tag: nil
   228  .  .  .  .  .  .  .  .  .  Comment: nil
   229  .  .  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:18:1
   232  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  Incomplete: false
   234  .  .  .  .  .  }
   235  .  .  .  .  .  Comment: nil
   236  .  .  .  .  }
   237  .  .  .  }
   238  .  .  .  Rparen: -
   239  .  .  }
   240  .  .  3: *ast.GenDecl {
   241  .  .  .  Doc: nil
   242  .  .  .  TokPos: testdata/pet.spec.go:20:1
   243  .  .  .  Tok: type
   244  .  .  .  Lparen: -
   245  .  .  .  Specs: []ast.Spec (len = 1) {
   246  .  .  .  .  0: *ast.TypeSpec {
   247  .  .  .  .  .  Doc: nil
   248  .  .  .  .  .  Name: *ast.Ident {
   249  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:20:6
   250  .  .  .  .  .  .  Name: "FindPetsParams"
   251  .  .  .  .  .  .  Obj: *ast.Object {
   252  .  .  .  .  .  .  .  Kind: type
   253  .  .  .  .  .  .  .  Name: "FindPetsParams"
   254  .  .  .  .  .  .  .  Decl: *(obj @ 246)
   255  .  .  .  .  .  .  .  Data: nil
   256  .  .  .  .  .  .  .  Type: nil
   257  .  .  .  .  .  .  }
   258  .  .  .  .  .  }
   259  .  .  .  .  .  Assign: -
   260  .  .  .  .  .  Type: *ast.StructType {
   261  .  .  .  .  .  .  Struct: testdata/pet.spec.go:20:21
   262  .  .  .  .  .  .  Fields: *ast.FieldList {
   263  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:20:28
   264  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   265  .  .  .  .  .  .  .  .  0: *ast.Field {
   266  .  .  .  .  .  .  .  .  .  Doc: nil
   267  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   268  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   269  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:21:2
   270  .  .  .  .  .  .  .  .  .  .  .  Name: "Tags"
   271  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   272  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   273  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Tags"
   274  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 265)
   275  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   276  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   277  .  .  .  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   281  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:21:8
   282  .  .  .  .  .  .  .  .  .  .  Len: nil
   283  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   284  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:21:10
   285  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   286  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   287  .  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  .  .  Tag: nil
   290  .  .  .  .  .  .  .  .  .  Comment: nil
   291  .  .  .  .  .  .  .  .  }
   292  .  .  .  .  .  .  .  .  1: *ast.Field {
   293  .  .  .  .  .  .  .  .  .  Doc: nil
   294  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   295  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   296  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:22:2
   297  .  .  .  .  .  .  .  .  .  .  .  Name: "Limit"
   298  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   299  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   300  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Limit"
   301  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 292)
   302  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   303  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   304  .  .  .  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   308  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:22:8
   309  .  .  .  .  .  .  .  .  .  .  Name: "int32"
   310  .  .  .  .  .  .  .  .  .  .  Obj: nil
   311  .  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  .  .  Tag: nil
   313  .  .  .  .  .  .  .  .  .  Comment: nil
   314  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:23:1
   317  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  Incomplete: false
   319  .  .  .  .  .  }
   320  .  .  .  .  .  Comment: nil
   321  .  .  .  .  }
   322  .  .  .  }
   323  .  .  .  Rparen: -
   324  .  .  }
   325  .  .  4: *ast.GenDecl {
   326  .  .  .  Doc: nil
   327  .  .  .  TokPos: testdata/pet.spec.go:25:1
   328  .  .  .  Tok: type
   329  .  .  .  Lparen: -
   330  .  .  .  Specs: []ast.Spec (len = 1) {
   331  .  .  .  .  0: *ast.TypeSpec {
   332  .  .  .  .  .  Doc: nil
   333  .  .  .  .  .  Name: *ast.Ident {
   334  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:25:6
   335  .  .  .  .  .  .  Name: "Interface"
   336  .  .  .  .  .  .  Obj: *ast.Object {
   337  .  .  .  .  .  .  .  Kind: type
   338  .  .  .  .  .  .  .  Name: "Interface"
   339  .  .  .  .  .  .  .  Decl: *(obj @ 331)
   340  .  .  .  .  .  .  .  Data: nil
   341  .  .  .  .  .  .  .  Type: nil
   342  .  .  .  .  .  .  }
   343  .  .  .  .  .  }
   344  .  .  .  .  .  Assign: -
   345  .  .  .  .  .  Type: *ast.InterfaceType {
   346  .  .  .  .  .  .  Interface: testdata/pet.spec.go:25:16
   347  .  .  .  .  .  .  Methods: *ast.FieldList {
   348  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:25:26
   349  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {
   350  .  .  .  .  .  .  .  .  0: *ast.Field {
   351  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   352  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   353  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   354  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:26:2
   355  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (GET /pets)"
   356  .  .  .  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  .  .  .  }
   358  .  .  .  .  .  .  .  .  .  }
   359  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   360  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   361  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:2
   362  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPets"
   363  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   364  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   365  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPets"
   366  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 350)
   367  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   368  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   369  .  .  .  .  .  .  .  .  .  .  .  }
   370  .  .  .  .  .  .  .  .  .  .  }
   371  .  .  .  .  .  .  .  .  .  }
   372  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   373  .  .  .  .  .  .  .  .  .  .  Func: -
   374  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   375  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:27:10
   376  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   377  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   378  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   379  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   380  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   381  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:11
   382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "params"
   383  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   384  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "params"
   386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 377)
   387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   391  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   393  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:18
   394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetsParams"
   395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 251)
   396  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   397  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   398  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   399  .  .  .  .  .  .  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  .  .  .  .  .  }
   401  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:27:32
   402  .  .  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   404  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   405  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   406  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   407  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   408  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   409  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   410  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:27:34
   411  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Len: nil
   412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:27:36
   414  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 182)
   416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   418  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   419  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   420  .  .  .  .  .  .  .  .  .  .  .  .  }
   421  .  .  .  .  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   423  .  .  .  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  .  .  Tag: nil
   426  .  .  .  .  .  .  .  .  .  Comment: nil
   427  .  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  .  1: *ast.Field {
   429  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   430  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   431  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   432  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:29:2
   433  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (POST /pets)"
   434  .  .  .  .  .  .  .  .  .  .  .  }
   435  .  .  .  .  .  .  .  .  .  .  }
   436  .  .  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   438  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   439  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:30:2
   440  .  .  .  .  .  .  .  .  .  .  .  Name: "AddPet"
   441  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   442  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   443  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AddPet"
   444  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 428)
   445  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   446  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   447  .  .  .  .  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  .  .  .  }
   450  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   451  .  .  .  .  .  .  .  .  .  .  Func: -
   452  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   453  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:30:8
   454  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   455  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   456  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   457  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:30:9
   460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "body"
   461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "body"
   464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 455)
   465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   471  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:30:14
   472  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   473  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 182)
   474  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   475  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   476  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   477  .  .  .  .  .  .  .  .  .  .  .  .  }
   478  .  .  .  .  .  .  .  .  .  .  .  }
   479  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:30:17
   480  .  .  .  .  .  .  .  .  .  .  }
   481  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   482  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   483  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   484  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   485  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   486  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   487  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:30:19
   489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 182)
   491  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   493  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   494  .  .  .  .  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   497  .  .  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  .  }
   499  .  .  .  .  .  .  .  .  .  Tag: nil
   500  .  .  .  .  .  .  .  .  .  Comment: nil
   501  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  2: *ast.Field {
   503  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   504  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   505  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   506  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:32:2
   507  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (DELETE /pets/{id})"
   508  .  .  .  .  .  .  .  .  .  .  .  }
   509  .  .  .  .  .  .  .  .  .  .  }
   510  .  .  .  .  .  .  .  .  .  }
   511  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   512  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   513  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:33:2
   514  .  .  .  .  .  .  .  .  .  .  .  Name: "DeletePet"
   515  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   516  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   517  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DeletePet"
   518  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 502)
   519  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   520  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   521  .  .  .  .  .  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  .  .  .  .  }
   523  .  .  .  .  .  .  .  .  .  }
   524  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   525  .  .  .  .  .  .  .  .  .  .  Func: -
   526  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   527  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:33:11
   528  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   529  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:33:12
   534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 529)
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:33:15
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   551  .  .  .  .  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:33:20
   554  .  .  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  .  .  Results: nil
   556  .  .  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  .  .  .  Tag: nil
   558  .  .  .  .  .  .  .  .  .  Comment: nil
   559  .  .  .  .  .  .  .  .  }
   560  .  .  .  .  .  .  .  .  3: *ast.Field {
   561  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   562  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   563  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   564  .  .  .  .  .  .  .  .  .  .  .  .  Slash: testdata/pet.spec.go:35:2
   565  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// (GET /pets)"
   566  .  .  .  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  .  }
   569  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   570  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   571  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:2
   572  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetById"
   573  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   574  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   575  .  .  .  .  .  .  .  .  .  .  .  .  Name: "FindPetById"
   576  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 560)
   577  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   578  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   579  .  .  .  .  .  .  .  .  .  .  .  }
   580  .  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  }
   582  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   583  .  .  .  .  .  .  .  .  .  .  Func: -
   584  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   585  .  .  .  .  .  .  .  .  .  .  .  Opening: testdata/pet.spec.go:36:13
   586  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   587  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   588  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   589  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:14
   592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
   596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 587)
   597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   601  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   602  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:17
   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int64"
   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   606  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   608  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   609  .  .  .  .  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:36:22
   612  .  .  .  .  .  .  .  .  .  .  }
   613  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   614  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   615  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   616  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   617  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   618  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   619  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: testdata/pet.spec.go:36:24
   621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Len: nil
   622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: testdata/pet.spec.go:36:26
   624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Pet"
   625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 182)
   626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   627  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   628  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   629  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   630  .  .  .  .  .  .  .  .  .  .  .  .  }
   631  .  .  .  .  .  .  .  .  .  .  .  }
   632  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   633  .  .  .  .  .  .  .  .  .  .  }
   634  .  .  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  .  .  Tag: nil
   636  .  .  .  .  .  .  .  .  .  Comment: nil
   637  .  .  .  .  .  .  .  .  }
   638  .  .  .  .  .  .  .  }
   639  .  .  .  .  .  .  .  Closing: testdata/pet.spec.go:37:1
   640  .  .  .  .  .  .  }
   641  .  .  .  .  .  .  Incomplete: false
   642  .  .  .  .  .  }
   643  .  .  .  .  .  Comment: nil
   644  .  .  .  .  }
   645  .  .  .  }
   646  .  .  .  Rparen: -
   647  .  .  }
   648  .  }
   649  .  Scope: *ast.Scope {
   650  .  .  Outer: nil
   651  .  .  Objects: map[string]*ast.Object (len = 5) {
   652  .  .  .  "NewPet": *(obj @ 101)
   653  .  .  .  "Pet": *(obj @ 182)
   654  .  .  .  "FindPetsParams": *(obj @ 251)
   655  .  .  .  "Interface": *(obj @ 336)
   656  .  .  .  "Error": *(obj @ 20)
   657  .  .  }
   658  .  }
   659  .  Imports: nil
   660  .  Unresolved: []*ast.Ident (len = 9) {
   661  .  .  0: *(obj @ 49)
   662  .  .  1: *(obj @ 72)
   663  .  .  2: *(obj @ 130)
   664  .  .  3: *(obj @ 153)
   665  .  .  4: *(obj @ 222)
   666  .  .  5: *(obj @ 283)
   667  .  .  6: *(obj @ 307)
   668  .  .  7: *(obj @ 544)
   669  .  .  8: *(obj @ 602)
   670  .  }
   671  .  Comments: []*ast.CommentGroup (len = 5) {
   672  .  .  0: *ast.CommentGroup {
   673  .  .  .  List: []*ast.Comment (len = 1) {
   674  .  .  .  .  0: *ast.Comment {
   675  .  .  .  .  .  Slash: testdata/pet.spec.go:1:1
   676  .  .  .  .  .  Text: "// +build ignore"
   677  .  .  .  .  }
   678  .  .  .  }
   679  .  .  }
   680  .  .  1: *(obj @ 351)
   681  .  .  2: *(obj @ 429)
   682  .  .  3: *(obj @ 503)
   683  .  .  4: *(obj @ 561)
   684  .  }
   685  }
