components:
  schemas:
    Error:
      properties:
        Code:
          format: int32
          type: integer
        Message:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
      required:
      - Code
      - Message
      type: object
    FindPetsParams:
      properties:
        Limit:
          format: int32
          type: integer
        Tags:
          items:
            format: '[a-z][A-Z]'
            maxLength: 20
            minLength: 10
            type: string
          type: array
      required:
      - Tags
      - Limit
      type: object
    NewPet:
      properties:
        Name:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
        Tag:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
      required:
      - Name
      - Tag
      type: object
    Pet:
      allOf:
      - $ref: '#/components/schemas/NewPet'
      - properties:
          Id:
            format: int64
            type: integer
        required:
        - Id
        type: object
info:
  contact:
    email: apiteam@swagger.io
    name: Swagger API Team
    url: http://swagger.io
  description: A sample API that uses a petstore as an example to demonstrate features
    in the OpenAPI 3.0 specification
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Petstore
  version: 1.0.0
openapi: 3.0.0
paths:
  /pets:
    get:
      operationId: FindPets
      parameters:
      - in: query
        name: Tags
        schema:
          items:
            format: '[a-z][A-Z]'
            maxLength: 20
            minLength: 10
            type: string
          type: array
      - in: query
        name: Limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: AddPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    delete:
      operationId: DeletePet
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      operationId: FindPetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
