openapi: 3.0.0
info:
  contact:
    email: apiteam@swagger.io
    name: Swagger API Team
    url: http://swagger.io
  description: A sample API that uses a petstore as an example to demonstrate features
    in the OpenAPI 3.0 specification
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Petstore
  version: 1.0.0
paths:
  /pets:
    get:
      description: |-
        Returns all pets from the system that the user has access to
        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
      operationId: FindPets
      parameters:
      - in: query
        name: tags
        schema:
          items:
            format: '[a-z][A-Z]'
            maxLength: 20
            minLength: 10
            type: string
          type: array
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    post:
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: AddPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPet'
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
  /pets/{id}:
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: DeletePet
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: pet deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    get:
      description: Returns a user based on a single ID, if the user does not have
        access to the pet
      operationId: FindPetById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: pet response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
components:
  schemas:
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
      required:
      - code
      - message
      type: object
    FindPetsParams:
      properties:
        limit:
          format: int32
          type: integer
        tags:
          items:
            format: '[a-z][A-Z]'
            maxLength: 20
            minLength: 10
            type: string
          type: array
      required:
      - tags
      - limit
      type: object
    NewPet:
      properties:
        name:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
        tag:
          format: '[a-z][A-Z]'
          maxLength: 20
          minLength: 10
          type: string
      required:
      - name
      - tag
      type: object
    Pet:
      allOf:
      - $ref: '#/components/schemas/NewPet'
      - properties:
          id:
            format: int64
            type: integer
        required:
        - id
        type: object
  securitySchemes:
    apiKey:
      in: header
      name: X-XXX
      type: apiKey
    auth:
      scheme: basic
      type: http
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://api.example.com/oauth2/authorize
          refreshUrl: https://api.example.com/oauth2/refresh
          scopes:
            read_pets: read your pets
            write_pets: modify pets in your account
          tokenUrl: https://api.example.com/oauth2/token
      type: oauth2
    oidc:
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
      type: openIdConnect
security:
- oidc: []
- oauth2:
  - write_pets
  - read_pets
- auth: []
- apiKey: []
